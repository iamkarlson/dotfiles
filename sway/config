# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

focus_follows_mouse no

# Your preferred terminal emulator
#set $term LIBGL_ALWAYS_SOFTWARE=1 alacritty
set $term kitty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
#set $menu dmenu_path | dmenu | xargs swaymsg exec --
#set $menu bemenu-run | xargs swaymsg exec --
#set $menu mauncher-launcher | xargs swaymsg exec --
#set $menu rofi | xargs swaymsg exec --
#set $menu rofi -show drun -show-icons -font 'CaskaydiaCove Nerd Font 17'
set $menu ~/src/dotfiles/rofi/launcher.sh

#set $menu wofi -show drun -show-icons -font 'CaskaydiaCove Nerd Font 17'


# Toggle control center
bindsym $mod+Shift+n exec swaync-client -t -sw



### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input "type:keyboard" {
    xkb_layout us,ru
    xkb_options grp:caps_toggle
}

input type:keyboard xkb_numlock enabled


### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynagmode -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
    #bindsym $mod+Shift+e exec swaymsg exit

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
bindsym --to-code {
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
     $mod+b splith
     $mod+v splitv

    # Switch the current container between different layout styles
     $mod+s layout stacking
     $mod+w layout tabbed
     $mod+e layout toggle split

    # Make the current focus fullscreen
     $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
     $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
     $mod+space focus mode_toggle

    # Move focus to the parent container
     $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
     $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
     $mod+minus scratchpad show
}
#
# Resizing containers:
#
mode "resize" {
    bindsym --to-code {
        # left will shrink the containers width
        # right will grow the containers width
        # up will shrink the containers height
        # down will grow the containers height
        $left resize shrink width 10px
        $down resize grow height 10px
        $up resize shrink height 10px
        $right resize grow width 10px

        # Ditto, with arrow keys
        Left resize shrink width 10px
        Down resize grow height 10px
        Up resize shrink height 10px
        Right resize grow width 10px

        # Return to default mode
        Return mode "default"
        Escape mode "default"
     }
}
bindsym --to-code $mod+r mode "resize"

#
# Media
#


# brightness control
set $brightness_up brightnessctl set +10%
set $brightness_down brightnessctl set 10%-


# audio control
set $sink_volume pactl get-sink-volume @DEFAULT_SINK@ | grep '^Volume:' | cut -d / -f 2 | tr -d ' ' | sed 's/%//'
set $source_volume pactl get-source-volume @DEFAULT_SOURCE@ | grep '^Volume:' | cut -d / -f 2 | tr -d ' ' | sed 's/%//'
set $volume_down $onscreen_bar $(pactl set-sink-volume @DEFAULT_SINK@ -5% && $sink_volume)
set $volume_up $onscreen_bar $(pactl set-sink-volume @DEFAULT_SINK@ +5% && $sink_volume)
set $volume_mute $onscreen_bar $(pactl set-sink-mute @DEFAULT_SINK@ toggle && pactl get-sink-mute @DEFAULT_SINK@ | sed -En "/no/ s/.*/$($sink_volume)/p; /yes/ s/.*/0/p")
set $mic_mute $onscreen_bar $(pactl set-source-mute @DEFAULT_SOURCE@ toggle && pactl get-source-mute @DEFAULT_SOURCE@ | sed -En "/no/ s/.*/$($source_volume)/p; /yes/ s/.*/0/p")


# --locked flags allow the buttons to be used whilst the screen is locked.

bindsym --locked {

     XF86AudioRaiseVolume exec $volume_up

     XF86AudioLowerVolume exec $volume_down

     XF86AudioMute exec $volume_mute

     XF86AudioMicMute exec $mic_mute

     XF86MonBrightnessUp exec $brightness_up

     XF86MonBrightnessDown exec $brightness_down

     XF86AudioPlay exec playerctl play-pause

     XF86AudioNext exec playerctl next

     XF86AudioPrev exec playerctl previous
}



### Idle configuration
#
# Example configuration:
#
# exec swayidle -w
#          timeout 300 'swaylock -f -c 000000'
#          timeout 600 'swaymsg "output * dpms off"'
#          resume 'swaymsg "output * dpms on"'
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

exec swayidle -w  \
     timeout 600 'swaylock -f' \
     timeout 1800 '~/.config/sway/scripts/dim_screen.sh'  \
     resume '~/.config/sway/scripts/undim_screen.sh'

bindsym $mod+Shift+Escape exec swaylock -f -c 000000


#
# Status Bar:
#
bar swaybar_command waybar


# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position top
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    #status_command while date +'%Y-%m-%d %I:%M:%S %p'; do sleep 1; done
#    status_command i3status
#
#    colors {
#        statusline #ffffff
#        background #323232
#        inactive_workspace #32323200 #32323200 #5c5c5c
#    }
#}

include /etc/sway/config.d/*
include ~/.config/sway/local/*
include ~/.config/sway/config.d/*

mode "nag" {
	bindsym --to-code {
		Ctrl+d mode "default"

		Ctrl+c $nag --exit
		q $nag --exit
		Escape $nag --exit

		Return $nag --confirm

		Tab $nag --select prev
		Shift+Tab $nag --select next


		Left $nag --select prev
		Right $nag --select next

		Up $nag --select prev
		Down $nag --select next

	}
}

set $profile $(scripts/get_profile.sh)
exec echo "current profile: $profile" > /tmp/log
include "profiles/$profile.conf"
